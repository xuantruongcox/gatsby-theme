{"version":3,"file":"component---gatsby-theme-events-src-templates-event-js.js","mappings":";;;;;;;;;;;;;;;;;AAA0B;AAE1B,MAAMC,OAAO,GAAGA,CAACC,IAAI,EAAE;EAAEC,GAAG,GAAG,IAAI;EAAEC,KAAK,GAAG,IAAI;EAAEC,IAAI,GAAG;AAAK,CAAC,GAAG,CAAC,CAAC,KACnEH,IAAI,CAACI,kBAAkB,CAAC,OAAO,EAAE;EAC/BH,GAAG,EAAEA,GAAG,GAAG,SAAS,GAAGI,SAAS;EAChCH,KAAK,EAAEA,KAAK,GAAG,MAAM,GAAGG,SAAS;EACjCF,IAAI,EAAEA,IAAI,GAAG,SAAS,GAAGE;AAC3B,CAAC,CAAC;AACJ,MAAMC,SAAS,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EAC5C,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACH,SAAS,CAAC;EACjC,MAAMI,GAAG,GAAG,IAAID,IAAI,CAACF,OAAO,CAAC;EAC7B,MAAMI,QAAQ,GAAGH,KAAK,CAACI,YAAY,CAAC,CAAC,KAAKF,GAAG,CAACE,YAAY,CAAC,CAAC;EAE5D,oBACEf,0DAAA,CAAAA,uDAAA,qBACEA,0DAAA;IAAMkB,QAAQ,EAAEP,KAAK,CAACQ,WAAW,CAAC;EAAE,GACjClB,OAAO,CAACU,KAAK,EAAE;IAAEN,IAAI,EAAES;EAAS,CAAC,CAC9B,CAAC,EACN,CAACA,QAAQ,iBACRd,0DAAA,CAAAA,uDAAA,QAAE,GAEA,eAAAA,0DAAA;IAAMkB,QAAQ,EAAEL,GAAG,CAACM,WAAW,CAAC;EAAE,GAC/BlB,OAAO,CAACY,GAAG,EAAE;IAAET,KAAK,EAAEO,KAAK,CAACS,QAAQ,CAAC,CAAC,KAAKP,GAAG,CAACO,QAAQ,CAAC;EAAE,CAAC,CACxD,CACN,CAEJ,CAAC;AAEP,CAAC;AAED,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,GAAG;EAAEf,SAAS;EAAEC;AAAQ,CAAC,kBACxDV,0DAAA,2BACEA,0DAAA,aACGsB,IAAI,EAAC,IAAE,EAACC,QAAQ,EAAC,GAChB,CAAC,eACLvB,0DAAA,yBACEA,0DAAA,CAACQ,SAAS;EAACC,SAAS,EAAEA,SAAU;EAACC,OAAO,EAAEA;AAAQ,CAAE,CACnD,CAAC,eACJV,0DAAA,YAAG,WACQ,eAAAA,0DAAA;EAAGyB,IAAI,EAAED;AAAI,GAAEA,GAAO,CAC9B,CACA,CACN;AAED,iEAAeH,KAAK;;;;;;;;;;;;;;;;;AC5CM;AACoB;AAC9C,MAAMO,MAAM,GAAGA,CAAC;EAAEC;AAAS,CAAC,kBAC1B7B,0DAAA,2BACEA,0DAAA,CAAC0B,6CAAO,QAAC,qBAA4B,CAAC,eACtC1B,0DAAA,CAAC2B,+CAAS,QAAEE,QAAoB,CAC7B,CACN;AAED,iEAAeD,MAAM;;;;;;;;;;;;;;;;;;ACTK;AAEgB;AACF;AAEjC,MAAME,KAAK,eAWjB;AAED,MAAMC,aAAa,GAAGA,CAAC;EAACC,IAAI,EAAE;IAACC;EAAK;AAAC,CAAC,kBAClCjC,0DAAA,CAAC4B,0DAAM,qBACH5B,0DAAA,CAACqB,yDAAK,EAAKY,KAAO,CACd,CACX;AAED,iEAAeF,aAAa","sources":["webpack://site/../gatsby-theme-events/src/components/event.js","webpack://site/../gatsby-theme-events/src/components/layout.js","webpack://site/../gatsby-theme-events/src/templates/event.js"],"sourcesContent":["import React from \"react\";\n\nconst getDate = (date, { day = true, month = true, year = true } = {}) =>\n  date.toLocaleDateString(\"en-US\", {\n    day: day ? \"numeric\" : undefined,\n    month: month ? \"long\" : undefined,\n    year: year ? \"numeric\" : undefined,\n  });\nconst EventDate = ({ startDate, endDate }) => {\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  const isOneDay = start.toDateString() === end.toDateString();\n\n  return (\n    <>\n      <time dateTime={start.toISOString()}>\n        {getDate(start, { year: isOneDay })}\n      </time>\n      {!isOneDay && (\n        <>\n          -\n          <time dateTime={end.toISOString()}>\n            {getDate(end, { month: start.getMonth() !== end.getMonth() })}\n          </time>\n        </>\n      )}\n    </>\n  );\n};\n\nconst Event = ({ name, location, url, startDate, endDate }) => (\n  <div>\n    <h2>\n      {name} ({location})\n    </h2>\n    <p>\n      <EventDate startDate={startDate} endDate={endDate} />\n    </p>\n    <p>\n      Website: <a href={url}>{url}</a>\n    </p>\n  </div>\n);\n\nexport default Event;\n","import React from \"react\";\nimport { Heading, Container } from \"theme-ui\";\nconst Layout = ({ children }) => (\n  <div>\n    <Heading>Gatsby Events Theme</Heading>\n    <Container>{children}</Container>\n  </div>\n);\n\nexport default Layout;\n","import React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/layout';\nimport Event from '../components/event';\n\nexport const query = graphql`\n    query($eventID: String!){\n        event(id: {eq: $eventID}){\n            name\n            url\n            startDate(formatString: \"MMMM DD YYYY\")\n            endDate(formatString: \"MMMM DD YYYY\")\n            location\n            slug\n        }\n    }\n`\n\nconst EventTemplate = ({data: {event}}) => (\n    <Layout>\n        <Event {...event}/>\n    </Layout>\n)\n\nexport default EventTemplate"],"names":["React","getDate","date","day","month","year","toLocaleDateString","undefined","EventDate","startDate","endDate","start","Date","end","isOneDay","toDateString","createElement","Fragment","dateTime","toISOString","getMonth","Event","name","location","url","href","Heading","Container","Layout","children","query","EventTemplate","data","event"],"sourceRoot":""}